"use strict";classShape{constructor(id,x,y){this.id=idthis.move(x,y)}move(x,y){this.x=xthis.y=y}}classRectangleextendsShape{constructor(id,x,y,width,height){super(id,x,y)this.width=widththis.height=height}}classCircleextendsShape{constructor(id,x,y,radius){super(id,x,y)this.radius=radius}}varaggregation=(baseClass,...mixins)=>{letbase=class_CombinedextendsbaseClass{constructor(...args){super(...args)mixins.forEach((mixin)=>{mixin.prototype.initializer.call(this)})}}letcopyProps=(target,source)=>{Object.getOwnPropertyNames(source).concat(Object.getOwnPropertySymbols(source)).forEach((prop)=>{if(prop.match(/^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/))returnObject.defineProperty(target,prop,Object.getOwnPropertyDescriptor(source,prop))})}mixins.forEach((mixin)=>{copyProps(base.prototype,mixin.prototype)copyProps(base,mixin)})returnbase}classColored{initializer(){this._color="white"}getcolor(){returnthis._color}setcolor(v){this._color=v}}classZCoord{initializer(){this._z=0}getz(){returnthis._z}setz(v){this._z=v}}classShape{constructor(x,y){this._x=x;this._y=y}getx(){returnthis._x}setx(v){this._x=v}gety(){returnthis._y}sety(v){this._y=v}}classRectangleextendsaggregation(Shape,Colored,ZCoord){}varrect=newRectangle(7,42)rect.z=1000rect.color="red"console.log(rect.x,rect.y,rect.z,rect.color)classShape{toString(){return`Shape(${this.id})`}}classRectangleextendsShape{constructor(id,x,y,width,height){super(id,x,y)}toString(){return"Rectangle > "+super.toString()}}classCircleextendsShape{constructor(id,x,y,radius){super(id,x,y)}toString(){return"Circle > "+super.toString()}}classRectangleextendsShape{staticcontextTypes={router:PropTypes.object,};staticdefaultRectangle(){returnnewRectangle("default",0,0,100,100)}}classCircleextendsShape{staticdefaultCircle(){returnnewCircle("default",0,0,100)}}vardefRectangle=Rectangle.defaultRectangle()vardefCircle=Circle.defaultCircle()classRectangle{constructor(width,height){this._width=widththis._height=height}setwidth(width){this._width=width}getwidth(){returnthis._width}setheight(height){this._height=height}getheight(){returnthis._height}getarea(){returnthis._width*this._height}}varr=newRectangle(50,20)r.area===1000classA{;}classB{get[runtimeCalc](){return1};set[runtimeCalc](p){};get'string as key'(){};}letObj={[asdfg](a){},*foo(){},f(){},geta(){},seta([aa]){},...anotherObj,...{speradObjectLiteral},...functionResult()}constPREFIX="prefix";classClassWithField{field;fieldWithInitializer="instance field";[`${PREFIX}Field`]="prefixed field";}constinstance=newClassWithField();console.log(Object.hasOwn(instance,"field"));console.log(instance.field);console.log(instance.fieldWithInitializer);console.log(instance.prefixField);classClassWithStaticInitializationBlock{staticstaticProperty1='Property 1';staticstaticProperty2;static{this.staticProperty2='Property 2';}}console.log(ClassWithStaticInitializationBlock.staticProperty1);console.log(ClassWithStaticInitializationBlock.staticProperty2);<EOF>